//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

public partial class Asset
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public Asset()
    {
        this.Tags = new HashSet<Tag>();
        this.AssetGraphics = new HashSet<AssetGraphic>();
    }

    public long Id { get; set; }
    public string Name { get; set; }
    public Nullable<long> AssetTypeId { get; set; }
    public string Description { get; set; }
    public Nullable<long> ManufacturerCompanyId { get; set; }
    public string Model { get; set; }
    public string SerialNumber { get; set; }
    public Nullable<decimal> PurchasePrice { get; set; }
    public Nullable<long> ConditionId { get; set; }
    public Nullable<decimal> DowntimeCostPerMinute { get; set; }
    public Nullable<long> OwnerCompanyId { get; set; }
    public Nullable<long> SiteId { get; set; }
    public Nullable<long> CompanyId { get; set; }
    public Nullable<long> BuildingId { get; set; }
    public Nullable<long> AreaId { get; set; }
    public Nullable<long> GateId { get; set; }
    public Nullable<System.DateTime> OrderDate { get; set; }
    public Nullable<System.DateTime> ReceiveDate { get; set; }
    public Nullable<System.DateTime> InServiceDate { get; set; }
    public Nullable<System.DateTime> RetireDate { get; set; }
    public Nullable<int> WarrantyMiles { get; set; }
    public Nullable<int> WarrantyHours { get; set; }
    public Nullable<System.DateTime> LastModifiedDate { get; set; }
    public Nullable<long> ParentSystemId { get; set; }
    public Nullable<long> ParentAssetId { get; set; }
    public string BaseUnitImageURL { get; set; }
    public string Make { get; set; }
    public string Program { get; set; }
    public string ModelGenericName { get; set; }
    public string Revision { get; set; }

    public virtual Company Company { get; set; }
    public virtual AssetType AssetType { get; set; }
    public virtual AssetCondition AssetCondition { get; set; }
    public virtual Site Site { get; set; }
    public virtual SystemGroup System { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Tag> Tags { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<AssetGraphic> AssetGraphics { get; set; }
}

public partial class AssetCondition
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public AssetCondition()
    {
        this.Assets = new HashSet<Asset>();
    }

    public long Id { get; set; }
    public string Name { get; set; }
    public string Description { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Asset> Assets { get; set; }
}

public partial class AssetGraphic
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public AssetGraphic()
    {
        this.AssetGraphicVisibleValues = new HashSet<AssetGraphicVisibleValue>();
    }

    public long Id { get; set; }
    public Nullable<long> AssetId { get; set; }
    public string ImageURL { get; set; }
    public Nullable<System.DateTime> LastModifiedDate { get; set; }

    public virtual Asset Asset { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<AssetGraphicVisibleValue> AssetGraphicVisibleValues { get; set; }
}

public partial class AssetGraphicVisibleValue
{
    public long Id { get; set; }
    public Nullable<long> AssetGraphicId { get; set; }
    public Nullable<long> JBTStandardObservationId { get; set; }
    public string ValueWhenVisible { get; set; }
    public Nullable<System.DateTime> LastModifiedDate { get; set; }

    public virtual AssetGraphic AssetGraphic { get; set; }
}

public partial class AssetType
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public AssetType()
    {
        this.Assets = new HashSet<Asset>();
    }

    public long Id { get; set; }
    public string Name { get; set; }
    public string Description { get; set; }
    public Nullable<bool> IsValidForWidgets { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Asset> Assets { get; set; }
}

public partial class AuthorizableActivity
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public AuthorizableActivity()
    {
        this.UserAuthorizedActivities = new HashSet<UserAuthorizedActivity>();
    }

    public long Id { get; set; }
    public string Activity { get; set; }
    public string Description { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<UserAuthorizedActivity> UserAuthorizedActivities { get; set; }
}

public partial class BHSAlarmHistory
{
    public long Id { get; set; }
    public Nullable<decimal> iOPSAlarmUniqueId { get; set; }
    public Nullable<long> BHSId { get; set; }
    public Nullable<long> SiteId { get; set; }
    public string Alarm { get; set; }
    public string Description { get; set; }
    public string BHSName { get; set; }
    public int InstanceId { get; set; }
    public int ChildId { get; set; }
    public Nullable<System.DateTime> ActiveDateTime { get; set; }
    public System.DateTime TimeStamp { get; set; }
    public string ActiveColor { get; set; }
    public Nullable<System.DateTime> AcknowledgeTime { get; set; }
    public string AcknowledColor { get; set; }
    public string Location { get; set; }
    public Nullable<System.DateTime> ReturnToNormalTime { get; set; }
    public string NormalColor { get; set; }
    public string TransactionType { get; set; }
    public string DeviceTypeNameList { get; set; }
    public string DeviceNameList { get; set; }
    public string InstanceNameList { get; set; }

    public virtual Site Site { get; set; }
}

public partial class BHSBagTagScan
{
    public long Id { get; set; }
    public Nullable<long> SiteId { get; set; }
    public int DeviceId { get; set; }
    public Nullable<System.DateTime> Timestamp { get; set; }
    public Nullable<int> Token { get; set; }
    public string ItemData { get; set; }
    public Nullable<int> ResponseTime { get; set; }
    public string Name { get; set; }
    public int BagSeen { get; set; }
    public int NoRead { get; set; }
    public int Conflict { get; set; }
    public int Fallback { get; set; }
    public int Pier { get; set; }
    public int Flight { get; set; }
    public int Late { get; set; }
    public int Carrier { get; set; }
    public int Unknown { get; set; }
    public int Head1 { get; set; }
    public int Head2 { get; set; }
    public int Head3 { get; set; }
    public int Head4 { get; set; }
    public int Head5 { get; set; }
    public int Head6 { get; set; }
    public int Head7 { get; set; }
    public int Head8 { get; set; }
    public int Head9 { get; set; }
    public int Head10 { get; set; }
    public int Head11 { get; set; }
    public int Head12 { get; set; }

    public virtual Site Site { get; set; }
}

public partial class BHSCarrier
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public BHSCarrier()
    {
        this.BHSDeviceLocationCarrierMaps = new HashSet<BHSDeviceLocationCarrierMap>();
    }

    public long Id { get; set; }
    public string Carrier { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<BHSDeviceLocationCarrierMap> BHSDeviceLocationCarrierMaps { get; set; }
}

public partial class BHSCBRAEntryStatu
{
    public long Id { get; set; }
    public Nullable<long> SiteId { get; set; }
    public string BHSName { get; set; }
    public string SectionName { get; set; }
    public string DeviceType { get; set; }
    public int DeviceId { get; set; }
    public string AreaName { get; set; }
    public string QueueName { get; set; }
    public System.DateTime Timestamp { get; set; }
    public int Token { get; set; }
    public Nullable<int> StatusFlags { get; set; }
    public int QueueId { get; set; }
    public int OutOfGauge { get; set; }
    public int NoResponse { get; set; }
    public int EDSError { get; set; }
    public int EDSTimeout { get; set; }
    public int EDSAlarm { get; set; }
    public int EDSClear { get; set; }
    public int UnknownLostInTracking { get; set; }
    public int UnknownLengthError { get; set; }
    public int UnknownDuplicateToken { get; set; }
    public int UnknownOther { get; set; }
    public Nullable<int> CBRACleared { get; set; }
    public Nullable<long> SectionSystemId { get; set; }

    public virtual Site Site { get; set; }
}

public partial class BHSCurrentAlarm
{
    public long Id { get; set; }
    public string Alarm { get; set; }
    public string BHSName { get; set; }
    public Nullable<int> InstanceId { get; set; }
    public Nullable<int> ChildId { get; set; }
    public Nullable<System.DateTime> ActiveDateTime { get; set; }
    public string ActiveColor { get; set; }
    public Nullable<System.DateTime> AcknowledgeTime { get; set; }
    public string AcknowledgedBy { get; set; }
    public string AcknowledColor { get; set; }
    public string DeviceName { get; set; }
    public string Location { get; set; }
    public Nullable<System.DateTime> ReturnToNormalTime { get; set; }
    public string NormalColor { get; set; }
    public string DevTypeName { get; set; }
    public string TransactionType { get; set; }
    public Nullable<long> SiteId { get; set; }
    public string Description { get; set; }
    public Nullable<bool> Hide { get; set; }

    public virtual Site Site { get; set; }
}

public partial class BHSDeviceLocation
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public BHSDeviceLocation()
    {
        this.BHSDeviceLocationCarrierMaps = new HashSet<BHSDeviceLocationCarrierMap>();
    }

    public long Id { get; set; }
    public Nullable<long> SiteId { get; set; }
    public string DeviceName { get; set; }
    public string MemberName { get; set; }
    public string BHSName { get; set; }
    public Nullable<int> IsConveyor { get; set; }
    public Nullable<int> IsInTerminal { get; set; }
    public Nullable<int> IsMakeUp { get; set; }
    public Nullable<int> IsEDSMatrix { get; set; }
    public Nullable<int> IsDiverter { get; set; }
    public string IsATR { get; set; }
    public Nullable<int> IsCBRA { get; set; }
    public Nullable<int> IsTrackingPE { get; set; }
    public string Location { get; set; }
    public Nullable<long> SystemId { get; set; }
    public Nullable<int> IsDimentioner { get; set; }
    public Nullable<int> IsSelectedForCount { get; set; }
    public Nullable<int> IsDefaultDestination { get; set; }

    public virtual Site Site { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<BHSDeviceLocationCarrierMap> BHSDeviceLocationCarrierMaps { get; set; }
}

public partial class BHSDeviceLocationCarrierMap
{
    public long Id { get; set; }
    public long DeviceLocationId { get; set; }
    public long CarrierId { get; set; }

    public virtual BHSCarrier BHSCarrier { get; set; }
    public virtual BHSDeviceLocation DeviceLocation { get; set; }
}

public partial class BHSDeviceLocationThroughput
{
    public long Id { get; set; }
    public Nullable<long> SiteId { get; set; }
    public string MemberName { get; set; }
    public string BHSName { get; set; }
    public string Section { get; set; }
    public string Location { get; set; }
    public System.DateTime Timestamp { get; set; }
    public long BagThroughput { get; set; }

    public virtual Site Site { get; set; }
}

public partial class BHSJamAlarm
{
    public long Id { get; set; }
    public long SiteId { get; set; }
    public int InstanceId { get; set; }
    public System.DateTime AlarmDateTime { get; set; }
    public string AlarmColor { get; set; }
    public Nullable<System.DateTime> AcknowledgeTime { get; set; }
    public string AcknowledgedBy { get; set; }
    public string AcknowledColor { get; set; }
    public string Location { get; set; }
    public Nullable<long> LocationSystemId { get; set; }
    public string Alarm { get; set; }
    public Nullable<System.DateTime> ReturnToNormalTime { get; set; }
    public string NormalColor { get; set; }
    public string DeviceTypeName { get; set; }
    public string BHSName { get; set; }
    public string DeviceName { get; set; }
    public Nullable<long> DeviceSystemId { get; set; }
    public int IsAlarmNested { get; set; }
    public System.DateTime MinValueTimeStamp { get; set; }
    public System.DateTime MaxValueTimeStamp { get; set; }
    public long BagThroughput { get; set; }
    public string TypesName { get; set; }
    public string TransactionType { get; set; }

    public virtual Site Site { get; set; }
}

public partial class BHSToken
{
    public long Id { get; set; }
    public Nullable<int> Token1 { get; set; }
    public Nullable<System.DateTime> Timestamp { get; set; }
    public Nullable<long> SiteId { get; set; }
    public Nullable<int> DayOfYear { get; set; }

    public virtual Site Site { get; set; }
}

public partial class BHSTokenTracker
{
    public long Id { get; set; }
    public Nullable<long> BHSId { get; set; }
    public Nullable<long> siteId { get; set; }
    public int Token { get; set; }
    public string IATA { get; set; }
    public System.DateTime Timestamp { get; set; }
    public string EventList { get; set; }
    public string Location { get; set; }
    public string SubMessageTypeName { get; set; }
    public string Area { get; set; }
    public string DeviceName { get; set; }
    public string DeviceTypeNameList { get; set; }

    public virtual Site Site { get; set; }
}

public partial class ChronologicalRawTagValueLogKepwareReceiver
{
    public long Id { get; set; }
    public Nullable<System.DateTime> ObservationDateTime { get; set; }
    public Nullable<System.DateTime> CreationDate { get; set; }
    public string TagName { get; set; }
    public string Value { get; set; }
    public Nullable<System.DateTime> ETLDate { get; set; }
    public Nullable<int> Quality { get; set; }
    public Nullable<int> NotificationLevel { get; set; }
}

public partial class Company
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public Company()
    {
        this.CompanyContacts = new HashSet<CompanyContact>();
        this.CompanyDataReaders = new HashSet<CompanyDataReader>();
        this.SiteCompanies = new HashSet<SiteCompany>();
        this.Systems = new HashSet<SystemGroup>();
        this.CustomJBTStandardObservations = new HashSet<CustomJBTStandardObservation>();
        this.Assets = new HashSet<Asset>();
    }

    public long Id { get; set; }
    public string Designation { get; set; }
    public string Name { get; set; }
    public string ShortName { get; set; }
    public string Description { get; set; }
    public string Address { get; set; }
    public string GoogleMapLatLon { get; set; }
    public long CompanyTypeId { get; set; }
    public string ODataAccessToken { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<CompanyContact> CompanyContacts { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<CompanyDataReader> CompanyDataReaders { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<SiteCompany> SiteCompanies { get; set; }
    public virtual CompanyType CompanyType { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<SystemGroup> Systems { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<CustomJBTStandardObservation> CustomJBTStandardObservations { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Asset> Assets { get; set; }
}

public partial class CompanyContact
{
    public long Id { get; set; }
    public Nullable<long> PersonId { get; set; }
    public string Role { get; set; }
    public Nullable<long> CompanyId { get; set; }

    public virtual Company Company { get; set; }
    public virtual Person Person { get; set; }
}

public partial class CompanyDataReader
{
    public long Id { get; set; }
    public Nullable<long> CompanyId { get; set; }
    public Nullable<long> iOPSUserId { get; set; }

    public virtual Company Company { get; set; }
    public virtual iOPSUser iOPSUser { get; set; }
}

public partial class CompanyType
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public CompanyType()
    {
        this.Companies = new HashSet<Company>();
    }

    public long Id { get; set; }
    public string Name { get; set; }
    public string Description { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Company> Companies { get; set; }
}

public partial class Country
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public Country()
    {
        this.People = new HashSet<Person>();
    }

    public long Id { get; set; }
    public string Name { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Person> People { get; set; }
}

public partial class CustomJBTStandardObservation
{
    public long Id { get; set; }
    public Nullable<long> CompanyId { get; set; }
    public Nullable<long> JBTStandardObservationId { get; set; }
    public Nullable<System.DateTime> CreationDate { get; set; }
    public Nullable<long> CreatorUserId { get; set; }
    public string CustomName { get; set; }
    public string CustomDescription { get; set; }

    public virtual Company Company { get; set; }
    public virtual JBTStandardObservation JBTStandardObservation { get; set; }
}

public partial class Dashboard
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public Dashboard()
    {
        this.Widgets = new HashSet<Widget>();
        this.AssociatedWidgets = new HashSet<Widget>();
    }

    public long Id { get; set; }
    public Nullable<System.DateTime> CreationDate { get; set; }
    public Nullable<long> CreatorUserId { get; set; }
    public Nullable<System.DateTime> LastModifiedDate { get; set; }
    public string Name { get; set; }
    public Nullable<bool> IsAdminFixed { get; set; }
    public Nullable<long> LastModifiedUserId { get; set; }
    public Nullable<bool> IsInitialNameless { get; set; }
    public string Description { get; set; }
    public Nullable<int> Ordinal { get; set; }
    public Nullable<System.DateTime> CustomStartDate { get; set; }
    public Nullable<System.DateTime> CustomEndDate { get; set; }
    public Nullable<long> TimeScopeId { get; set; }
    public Nullable<long> ParentDashboardId { get; set; }

    public virtual iOPSUser iOPSUser { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Widget> Widgets { get; set; }
    public virtual DashboardTimeScope DashboardTimeScope { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Widget> AssociatedWidgets { get; set; }
}

public partial class DashboardTimeScope
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public DashboardTimeScope()
    {
        this.Dashboards = new HashSet<Dashboard>();
    }

    public long Id { get; set; }
    public string Description { get; set; }
    public Nullable<int> Days { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Dashboard> Dashboards { get; set; }
}

public partial class DatabaseMailQueue
{
    public long Id { get; set; }
    public string ProfileName { get; set; }
    public string Recipients { get; set; }
    public string CopyRecipients { get; set; }
    public string BlindCopyRecipients { get; set; }
    public string FromAddress { get; set; }
    public string ReplyTo { get; set; }
    public string Subject { get; set; }
    public string Body { get; set; }
    public string BodyFormat { get; set; }
    public string Importance { get; set; }
    public string Sensitivity { get; set; }
    public string FileAttachments { get; set; }
    public string Query { get; set; }
    public string ExecuteQueryDatabase { get; set; }
    public Nullable<bool> AttachQueryResultAsFile { get; set; }
    public string QueryAttachmentFilename { get; set; }
    public Nullable<bool> QueryResultHeader { get; set; }
    public Nullable<int> QueryResultWidth { get; set; }
    public string QueryResultSeparator { get; set; }
    public Nullable<bool> ExcludeQueryOutput { get; set; }
    public Nullable<bool> AppendQueryError { get; set; }
    public Nullable<bool> QueryNoTruncate { get; set; }
    public Nullable<bool> QueryResultNoPadding { get; set; }
    public Nullable<int> MailItemId { get; set; }
    public Nullable<System.DateTime> CreationDate { get; set; }
    public Nullable<System.DateTime> SentDate { get; set; }
    public string SentStatus { get; set; }
    public Nullable<int> Result { get; set; }
}

public partial class GSAlarmHistory
{
    public long Id { get; set; }
    public long SiteId { get; set; }
    public string Name { get; set; }
    public Nullable<System.DateTime> AlarmTime { get; set; }
    public Nullable<System.DateTime> CloseDate { get; set; }
    public Nullable<System.DateTime> NextAlarmDate { get; set; }
    public Nullable<int> AlarmDurationInMinutes { get; set; }
    public string JBTStandardObservationName { get; set; }
    public string JBTStandardObservationSynonymsName { get; set; }
    public Nullable<bool> BooleanValue { get; set; }
    public Nullable<long> TagId { get; set; }
    public string CompanyName { get; set; }
    public string BuildingName { get; set; }
    public string AreaName { get; set; }
    public string GateName { get; set; }
    public string AssetName { get; set; }

    public virtual Tag Tag { get; set; }
}

public partial class GSJBTStandardObservationIdExclusionListFromCurrentAlarm
{
    public long Id { get; set; }
    public Nullable<long> JBTStandardObservationId { get; set; }
    public Nullable<System.DateTime> CreationDate { get; set; }

    public virtual JBTStandardObservation JBTStandardObservation { get; set; }
}

public partial class GSReport
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public GSReport()
    {
        this.GSReportRuns = new HashSet<GSReportRun>();
    }

    public long Id { get; set; }
    public Nullable<long> SiteId { get; set; }
    public string Name { get; set; }
    public string Description { get; set; }
    public string RSURL { get; set; }

    public virtual Site Site { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<GSReportRun> GSReportRuns { get; set; }
}

public partial class GSReportRun
{
    public long Id { get; set; }
    public Nullable<System.DateTime> Date { get; set; }
    public Nullable<long> UserId { get; set; }
    public Nullable<long> GSReportId { get; set; }

    public virtual GSReport GSReport { get; set; }
}

public partial class iOPSUser
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public iOPSUser()
    {
        this.UserAuthorizedActivities = new HashSet<UserAuthorizedActivity>();
        this.UserEventLogs = new HashSet<UserEventLog>();
        this.CompanyDataReaders = new HashSet<CompanyDataReader>();
        this.SiteDataReaders = new HashSet<SiteDataReader>();
        this.Dashboards = new HashSet<Dashboard>();
        this.WidgetCustomTagDisplayOrders = new HashSet<WidgetCustomTagDisplayOrder>();
    }

    public long Id { get; set; }
    public Nullable<long> PersonId { get; set; }
    public string AccessToken { get; set; }
    public Nullable<System.DateTime> CreationDate { get; set; }
    public Nullable<bool> Active { get; set; }
    public string PasswordHash { get; set; }
    public Nullable<bool> WillEncryptPasswordOnFirstLogin { get; set; }
    public Nullable<bool> MustChangePasswordOnLogin { get; set; }
    public string Username { get; set; }
    public Nullable<long> CreatorPersonId { get; set; }
    public Nullable<int> IsSystemAdministrator { get; set; }
    public Nullable<int> GeneratePasswordChangeLoginTokenOnSave { get; set; }
    public string PasswordChangeLoginToken { get; set; }
    public Nullable<System.DateTime> PasswordChangeLoginTokenDate { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<UserAuthorizedActivity> UserAuthorizedActivities { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<UserEventLog> UserEventLogs { get; set; }
    public virtual Person Person { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<CompanyDataReader> CompanyDataReaders { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<SiteDataReader> SiteDataReaders { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Dashboard> Dashboards { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<WidgetCustomTagDisplayOrder> WidgetCustomTagDisplayOrders { get; set; }
}

public partial class JBTStandardObservation
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public JBTStandardObservation()
    {
        this.CustomJBTStandardObservations = new HashSet<CustomJBTStandardObservation>();
        this.Tags = new HashSet<Tag>();
        this.WidgetCustomTagDisplayOrders = new HashSet<WidgetCustomTagDisplayOrder>();
        this.SystemGraphicVisibleValues = new HashSet<SystemGraphicVisibleValue>();
        this.GSJBTStandardObservationIdExclusionListFromCurrentAlarms = new HashSet<GSJBTStandardObservationIdExclusionListFromCurrentAlarm>();
    }

    public long Id { get; set; }
    public string Name { get; set; }
    public Nullable<long> UnitId { get; set; }
    public string Description { get; set; }
    public Nullable<System.DateTime> LastModifiedDate { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<CustomJBTStandardObservation> CustomJBTStandardObservations { get; set; }
    public virtual Unit Unit { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Tag> Tags { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<WidgetCustomTagDisplayOrder> WidgetCustomTagDisplayOrders { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<SystemGraphicVisibleValue> SystemGraphicVisibleValues { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<GSJBTStandardObservationIdExclusionListFromCurrentAlarm> GSJBTStandardObservationIdExclusionListFromCurrentAlarms { get; set; }
}

public partial class Observation
{
    public long Id { get; set; }
    public Nullable<long> TagId { get; set; }
    public Nullable<System.DateTime> Date { get; set; }
    public Nullable<double> FloatValue { get; set; }
    public string TextValue { get; set; }
    public Nullable<bool> BooleanValue { get; set; }
    public Nullable<long> IntegerValue { get; set; }
    public System.Data.Entity.Spatial.DbGeography GeographicalPosition { get; set; }
    public string GoogleLatitude { get; set; }
    public string GoogleLongitude { get; set; }
    public Nullable<System.DateTime> CreationDate { get; set; }
    public Nullable<int> DateIsUTC { get; set; }
    public Nullable<int> Quality { get; set; }

    public virtual Tag Tag { get; set; }
}

public partial class ObservationAggregatedHighChartValue
{
    public long Id { get; set; }
    public Nullable<long> TagId { get; set; }
    public Nullable<System.DateTime> Day { get; set; }
    public string TagValues { get; set; }
    public Nullable<long> Size { get; set; }

    public virtual Tag Tag { get; set; }
}

public partial class Person
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public Person()
    {
        this.iOPSUsers = new HashSet<iOPSUser>();
        this.Subordinates = new HashSet<Person>();
        this.CompanyContacts = new HashSet<CompanyContact>();
    }

    public long Id { get; set; }
    public string GivenName { get; set; }
    public string MiddleName { get; set; }
    public string FamilyName { get; set; }
    public string StreetAddress1 { get; set; }
    public string StreetAddress2 { get; set; }
    public Nullable<long> CountryId { get; set; }
    public string Phone { get; set; }
    public string Email { get; set; }
    public string Title { get; set; }
    public Nullable<long> ReportsToPersonId { get; set; }
    public string ODataAccessToken { get; set; }
    public string City { get; set; }
    public string State { get; set; }
    public string ZipCode { get; set; }
    public Nullable<long> CellPhoneCarrierId { get; set; }
    public string MobilePhone { get; set; }

    public virtual Country Country { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<iOPSUser> iOPSUsers { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Person> Subordinates { get; set; }
    public virtual Person Supervisor { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<CompanyContact> CompanyContacts { get; set; }
}

public partial class Site
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public Site()
    {
        this.SiteCompanies = new HashSet<SiteCompany>();
        this.SiteDataReaders = new HashSet<SiteDataReader>();
        this.Systems = new HashSet<SystemGroup>();
        this.BagTagScans = new HashSet<BHSBagTagScan>();
        this.BHSJamAlarms = new HashSet<BHSJamAlarm>();
        this.BHSDeviceLocations = new HashSet<BHSDeviceLocation>();
        this.BHSCurrentAlarms = new HashSet<BHSCurrentAlarm>();
        this.CBRAEntryStatus = new HashSet<BHSCBRAEntryStatu>();
        this.DeviceLocationThroughputs = new HashSet<BHSDeviceLocationThroughput>();
        this.TokenTrackers = new HashSet<BHSTokenTracker>();
        this.Tokens = new HashSet<BHSToken>();
        this.BHSAlarmHistories = new HashSet<BHSAlarmHistory>();
        this.Assets = new HashSet<Asset>();
        this.GSReports = new HashSet<GSReport>();
    }

    public long Id { get; set; }
    public string Name { get; set; }
    public System.Data.Entity.Spatial.DbGeography GeographicalLocation { get; set; }
    public Nullable<int> UTCTimeOffset { get; set; }
    public string Description { get; set; }
    public string Address { get; set; }
    public Nullable<double> GoogleLatitude { get; set; }
    public Nullable<double> GoogleLongitude { get; set; }
    public Nullable<int> KepwareSQLTimeDifferenceMSFromCentral { get; set; }
    public Nullable<bool> HasBaggageHandling { get; set; }
    public Nullable<bool> HasGates { get; set; }
    public Nullable<System.DateTime> LastReportedDataDate { get; set; }
    public Nullable<System.DateTime> DateLastModified { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<SiteCompany> SiteCompanies { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<SiteDataReader> SiteDataReaders { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<SystemGroup> Systems { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<BHSBagTagScan> BagTagScans { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<BHSJamAlarm> BHSJamAlarms { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<BHSDeviceLocation> BHSDeviceLocations { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<BHSCurrentAlarm> BHSCurrentAlarms { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<BHSCBRAEntryStatu> CBRAEntryStatus { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<BHSDeviceLocationThroughput> DeviceLocationThroughputs { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<BHSTokenTracker> TokenTrackers { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<BHSToken> Tokens { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<BHSAlarmHistory> BHSAlarmHistories { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Asset> Assets { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<GSReport> GSReports { get; set; }
}

public partial class SiteCompany
{
    public long Id { get; set; }
    public Nullable<long> SiteId { get; set; }
    public Nullable<long> CompanyId { get; set; }

    public virtual Company Company { get; set; }
    public virtual Site Site { get; set; }
}

public partial class SiteDataReader
{
    public long Id { get; set; }
    public Nullable<long> SiteId { get; set; }
    public Nullable<long> iOPSUserId { get; set; }

    public virtual Site Site { get; set; }
    public virtual iOPSUser iOPSUser { get; set; }
}

public partial class StateAbbreviation
{
    public long Id { get; set; }
    public string Abbreviation { get; set; }
    public string Name { get; set; }
}

public partial class SystemGraphic
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public SystemGraphic()
    {
        this.SystemGraphicVisibleValues = new HashSet<SystemGraphicVisibleValue>();
    }

    public long Id { get; set; }
    public Nullable<long> SystemId { get; set; }
    public string ImageURL { get; set; }

    public virtual SystemGroup System { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<SystemGraphicVisibleValue> SystemGraphicVisibleValues { get; set; }
}

public partial class SystemGraphicVisibleValue
{
    public long Id { get; set; }
    public Nullable<long> SystemGraphicId { get; set; }
    public Nullable<long> JBTStandardObservationId { get; set; }
    public string ValueWhenVisible { get; set; }

    public virtual SystemGraphic SystemGraphic { get; set; }
    public virtual JBTStandardObservation JBTStandardObservation { get; set; }
}

public partial class SystemGroup
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public SystemGroup()
    {
        this.Children = new HashSet<SystemGroup>();
        this.Assets = new HashSet<Asset>();
        this.SystemGraphics = new HashSet<SystemGraphic>();
    }

    public long Id { get; set; }
    public string Name { get; set; }
    public Nullable<long> TypeId { get; set; }
    public Nullable<long> CompanyId { get; set; }
    public Nullable<long> SiteId { get; set; }
    public Nullable<long> ParentSystemId { get; set; }
    public Nullable<long> OriginalEntityId { get; set; }
    public Nullable<System.DateTime> DateLastModified { get; set; }
    public Nullable<System.DateTime> CreateDate { get; set; }
    public string BaseUnitImageURL { get; set; }
    public Nullable<bool> GPUPresent { get; set; }
    public Nullable<bool> PBBPresent { get; set; }
    public Nullable<bool> PCAPresent { get; set; }

    public virtual Company Company { get; set; }
    public virtual Site Site { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<SystemGroup> Children { get; set; }
    public virtual SystemGroup Parent { get; set; }
    public virtual SystemType SystemType { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Asset> Assets { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<SystemGraphic> SystemGraphics { get; set; }
}

public partial class SystemType
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public SystemType()
    {
        this.Systems = new HashSet<SystemGroup>();
    }

    public long Id { get; set; }
    public string Name { get; set; }
    public string LongName { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<SystemGroup> Systems { get; set; }
}

public partial class Tag
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public Tag()
    {
        this.Observations = new HashSet<Observation>();
        this.WidgetGraphTags = new HashSet<WidgetGraphTag>();
        this.ObservationAggregatedHighChartValues = new HashSet<ObservationAggregatedHighChartValue>();
        this.GSAlarmHistories = new HashSet<GSAlarmHistory>();
    }

    public long Id { get; set; }
    public string Name { get; set; }
    public Nullable<long> JBTStandardObservationId { get; set; }
    public Nullable<long> JBTStandardObservationSynonymsId { get; set; }
    public Nullable<long> AssetId { get; set; }
    public string Description { get; set; }
    public string DataType { get; set; }
    public Nullable<long> PLCId { get; set; }
    public Nullable<System.DateTime> CreationDate { get; set; }
    public Nullable<long> CreatorPersonId { get; set; }
    public Nullable<double> MinimumObservableDelta { get; set; }
    public Nullable<bool> IsMovingAverage { get; set; }
    public Nullable<int> MovingAverageInstanceCount { get; set; }
    public Nullable<double> ClientOverrideMinimumObservableDelta { get; set; }
    public Nullable<bool> ClientOverrideIsMovingAverage { get; set; }
    public Nullable<int> ClientOverrideMovingAverageInstanceCount { get; set; }
    public Nullable<System.DateTime> ClientOverrideBeginDate { get; set; }
    public Nullable<System.DateTime> ClientOverrideEndDate { get; set; }
    public Nullable<long> LastObservationId { get; set; }
    public Nullable<bool> IsAlarm { get; set; }
    public Nullable<bool> IsWarning { get; set; }
    public Nullable<long> AlarmSeverityId { get; set; }
    public Nullable<System.DateTime> LastModifiedDate { get; set; }
    public string CompanyName { get; set; }
    public string BuildingName { get; set; }
    public string AreaName { get; set; }
    public string GateName { get; set; }
    public string AssetName { get; set; }
    public string JBTStandardObservationName { get; set; }
    public string JBTStandardObservationSynonymsName { get; set; }
    public Nullable<int> Offset { get; set; }
    public Nullable<System.DateTime> LastObservationDate { get; set; }
    public string LastObservationTextValue { get; set; }
    public Nullable<bool> IsValidated { get; set; }
    public Nullable<bool> IsNotified { get; set; }
    public Nullable<long> SiteId { get; set; }
    public Nullable<System.DateTime> LastReportedDate { get; set; }
    public Nullable<double> ScalingFactor { get; set; }
    public Nullable<bool> IsCritical { get; set; }
    public Nullable<bool> IsInformational { get; set; }
    public Nullable<long> NotificationLevelId { get; set; }
    public Nullable<double> YIntercept { get; set; }
    public string ValueWhenActive { get; set; }
    public Nullable<bool> MarkedForDelete { get; set; }
    public Nullable<long> MergeToTagId { get; set; }
    public Nullable<long> PreviousObservationId { get; set; }
    public Nullable<System.DateTime> PreviousObservationDate { get; set; }
    public string PreviousObservationTextValue { get; set; }
    public Nullable<int> LastObservationQuality { get; set; }
    public Nullable<System.DateTime> LastObservationCreationDate { get; set; }
    public Nullable<int> PreviousObservationQuality { get; set; }
    public Nullable<System.DateTime> PreviousObservationCreationDate { get; set; }
    public Nullable<System.DateTime> PreviousReportedDate { get; set; }
    public Nullable<bool> IsDerived { get; set; }
    public Nullable<bool> IgnoreWhenTheAssetIsInactive { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Observation> Observations { get; set; }
    public virtual JBTStandardObservation JBTStandardObservation { get; set; }
    public virtual Asset Asset { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<WidgetGraphTag> WidgetGraphTags { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<ObservationAggregatedHighChartValue> ObservationAggregatedHighChartValues { get; set; }
    public virtual Observation LastObservation { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<GSAlarmHistory> GSAlarmHistories { get; set; }
}

public partial class Unit
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public Unit()
    {
        this.JBTStandardObservations = new HashSet<JBTStandardObservation>();
    }

    public long Id { get; set; }
    public string Name { get; set; }
    public string Description { get; set; }
    public Nullable<System.DateTime> LastModifiedDate { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<JBTStandardObservation> JBTStandardObservations { get; set; }
}

public partial class UserAuthorizedActivity
{
    public long Id { get; set; }
    public Nullable<long> AuthorizableActivityId { get; set; }
    public Nullable<long> iOPSUserId { get; set; }

    public virtual AuthorizableActivity AuthorizableActivity { get; set; }
    public virtual iOPSUser iOPSUser { get; set; }
}

public partial class UserEventLog
{
    public long Id { get; set; }
    public Nullable<long> iOPSUserId { get; set; }
    public Nullable<System.DateTime> LogDate { get; set; }
    public Nullable<long> UserEventTypeId { get; set; }

    public virtual iOPSUser iOPSUser { get; set; }
    public virtual UserEventType UserEventType { get; set; }
}

public partial class UserEventType
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public UserEventType()
    {
        this.UserEventLogs = new HashSet<UserEventLog>();
    }

    public long Id { get; set; }
    public string Name { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<UserEventLog> UserEventLogs { get; set; }
}

public partial class Widget
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public Widget()
    {
        this.WidgetCustomTagDisplayOrders = new HashSet<WidgetCustomTagDisplayOrder>();
        this.WidgetGraphTags = new HashSet<WidgetGraphTag>();
        this.ChildWidgets = new HashSet<Widget>();
    }

    public long Id { get; set; }
    public string Name { get; set; }
    public Nullable<long> WidgetTypeId { get; set; }
    public Nullable<System.DateTime> CreationDate { get; set; }
    public Nullable<long> ParentDashboardId { get; set; }
    public Nullable<long> AssetId { get; set; }
    public Nullable<long> TagId { get; set; }
    public Nullable<long> SystemId { get; set; }
    public Nullable<long> SiteId { get; set; }
    public Nullable<long> CompanyId { get; set; }
    public Nullable<int> Width { get; set; }
    public Nullable<int> Height { get; set; }
    public Nullable<int> Row { get; set; }
    public Nullable<int> Col { get; set; }
    public Nullable<long> EmbeddedDashboardId { get; set; }
    public Nullable<long> TerminalSystemId { get; set; }
    public Nullable<long> ZoneSystemId { get; set; }
    public Nullable<long> GateSystemId { get; set; }
    public Nullable<double> SplitLeftPercentage { get; set; }
    public Nullable<double> SplitRightPercentage { get; set; }
    public string TargetURL { get; set; }
    public string DefaultNavPill { get; set; }
    public Nullable<long> ParentWidgetId { get; set; }
    public Nullable<bool> IsModalPopUp { get; set; }

    public virtual WidgetType WidgetType { get; set; }
    public virtual Dashboard Dashboard { get; set; }
    public virtual Dashboard EmbeddedDashboard { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<WidgetCustomTagDisplayOrder> WidgetCustomTagDisplayOrders { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<WidgetGraphTag> WidgetGraphTags { get; set; }
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Widget> ChildWidgets { get; set; }
    public virtual Widget ParentWidget { get; set; }
}

public partial class WidgetCustomTagDisplayOrder
{
    public long Id { get; set; }
    public Nullable<long> iOPSUserId { get; set; }
    public Nullable<long> WidgetId { get; set; }
    public Nullable<long> JBTStandardObservationId { get; set; }
    public Nullable<int> Ordinal { get; set; }

    public virtual Widget Widget { get; set; }
    public virtual iOPSUser iOPSUser { get; set; }
    public virtual JBTStandardObservation JBTStandardObservation { get; set; }
}

public partial class WidgetGraphTag
{
    public long Id { get; set; }
    public Nullable<long> WidgetId { get; set; }
    public Nullable<long> TagId { get; set; }

    public virtual Tag Tag { get; set; }
    public virtual Widget Widget { get; set; }
}

public partial class WidgetType
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public WidgetType()
    {
        this.Widgets = new HashSet<Widget>();
    }

    public long Id { get; set; }
    public string Name { get; set; }
    public Nullable<int> InitialHeight { get; set; }
    public Nullable<int> InitialWidth { get; set; }
    public Nullable<System.DateTime> CreationDate { get; set; }
    public string DataTypeCode { get; set; }
    public string Description { get; set; }
    public string CategoryPath { get; set; }
    public Nullable<int> DevelopmentPriority { get; set; }
    public Nullable<System.DateTime> DateCompleted { get; set; }
    public Nullable<System.DateTime> EstimatedDateOfCompletion { get; set; }
    public Nullable<long> DeveloperPersonId { get; set; }
    public string AngularDirectiveName { get; set; }
    public Nullable<int> Ordinal { get; set; }
    public Nullable<bool> IsAvailableToAdmin { get; set; }
    public Nullable<bool> IsAvailableToAll { get; set; }
    public Nullable<bool> IsHiddenSystemType { get; set; }
    public Nullable<bool> HasSettings { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
    public virtual ICollection<Widget> Widgets { get; set; }
}

public partial class ActiveAlarmSummaryByAlarmTypeAndDayWithAverageDurationInSeconds_Result
{
    public string Alarm { get; set; }
    public Nullable<System.DateTime> AlarmDay { get; set; }
    public Nullable<double> DurationActiveToAcknowledgeSecondsSum { get; set; }
    public Nullable<double> DurationActiveToInactiveSecondsSum { get; set; }
    public Nullable<decimal> DurationActiveToAcknowledgeSecondsAverage { get; set; }
    public Nullable<decimal> DurationActiveToInactiveSecondsAverage { get; set; }
}

public partial class ActiveAlarmSummaryByAlarmTypeAndHourWithAverageDurationInSeconds_Result
{
    public string Alarm { get; set; }
    public Nullable<System.DateTime> AlarmHour { get; set; }
    public Nullable<double> DurationActiveToAcknowledgeSecondsSum { get; set; }
    public Nullable<double> DurationActiveToInactiveSecondsSum { get; set; }
    public Nullable<decimal> DurationActiveToAcknowledgeSecondsAverage { get; set; }
    public Nullable<decimal> DurationActiveToInactiveSecondsAverage { get; set; }
}

public partial class ActiveAlarmSummaryByDayWithAverageDurationInSeconds_Result
{
    public Nullable<System.DateTime> AlarmDay { get; set; }
    public Nullable<double> DurationActiveToAcknowledgeSecondsSum { get; set; }
    public Nullable<double> DurationActiveToInactiveSecondsSum { get; set; }
    public Nullable<decimal> DurationActiveToAcknowledgeSecondsAverage { get; set; }
    public Nullable<decimal> DurationActiveToInactiveSecondsAverage { get; set; }
}

public partial class ActiveAlarmSummaryByHourWithAverageDurationInSeconds_Result
{
    public Nullable<System.DateTime> AlarmHour { get; set; }
    public Nullable<double> DurationActiveToAcknowledgeSecondsSum { get; set; }
    public Nullable<double> DurationActiveToInactiveSecondsSum { get; set; }
    public Nullable<decimal> DurationActiveToAcknowledgeSecondsAverage { get; set; }
    public Nullable<decimal> DurationActiveToInactiveSecondsAverage { get; set; }
}

public partial class BHSActiveAlarmSummaryByAlarmTypeAndDayWithAverageDurationInSeconds_Result
{
    public string Alarm { get; set; }
    public Nullable<System.DateTime> AlarmDay { get; set; }
    public Nullable<double> DurationActiveToAcknowledgeSecondsSum { get; set; }
    public Nullable<double> DurationActiveToInactiveSecondsSum { get; set; }
    public Nullable<decimal> DurationActiveToAcknowledgeSecondsAverage { get; set; }
    public Nullable<decimal> DurationActiveToInactiveSecondsAverage { get; set; }
}

public partial class BHSActiveAlarmSummaryByAlarmTypeAndDayWithAverageDurationInSeconds_Result1
{
    public string Alarm { get; set; }
    public Nullable<System.DateTime> AlarmDay { get; set; }
    public Nullable<double> DurationActiveToAcknowledgeSecondsSum { get; set; }
    public Nullable<double> DurationActiveToInactiveSecondsSum { get; set; }
    public Nullable<decimal> DurationActiveToAcknowledgeSecondsAverage { get; set; }
    public Nullable<decimal> DurationActiveToInactiveSecondsAverage { get; set; }
}

public partial class BHSActiveAlarmSummaryByAlarmTypeAndDayWithAverageDurationInSeconds_Result2
{
    public string Alarm { get; set; }
    public Nullable<System.DateTime> AlarmDay { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<double> DurationActiveToAcknowledgeSecondsSum { get; set; }
    public Nullable<double> DurationActiveToInactiveSecondsSum { get; set; }
    public Nullable<decimal> DurationActiveToAcknowledgeSecondsAverage { get; set; }
    public Nullable<decimal> DurationActiveToInactiveSecondsAverage { get; set; }
}

public partial class BHSActiveAlarmSummaryByAlarmTypeAndHourWithAverageDurationInSeconds_Result
{
    public string Alarm { get; set; }
    public Nullable<System.DateTime> AlarmHour { get; set; }
    public Nullable<double> DurationActiveToAcknowledgeSecondsSum { get; set; }
    public Nullable<double> DurationActiveToInactiveSecondsSum { get; set; }
    public Nullable<decimal> DurationActiveToAcknowledgeSecondsAverage { get; set; }
    public Nullable<decimal> DurationActiveToInactiveSecondsAverage { get; set; }
}

public partial class BHSActiveAlarmSummaryByAlarmTypeAndHourWithAverageDurationInSeconds_Result1
{
    public string Alarm { get; set; }
    public Nullable<System.DateTime> AlarmHour { get; set; }
    public Nullable<double> DurationActiveToAcknowledgeSecondsSum { get; set; }
    public Nullable<double> DurationActiveToInactiveSecondsSum { get; set; }
    public Nullable<decimal> DurationActiveToAcknowledgeSecondsAverage { get; set; }
    public Nullable<decimal> DurationActiveToInactiveSecondsAverage { get; set; }
}

public partial class BHSActiveAlarmSummaryByAlarmTypeAndHourWithAverageDurationInSeconds_Result2
{
    public string Alarm { get; set; }
    public Nullable<System.DateTime> AlarmHour { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<double> DurationActiveToAcknowledgeSecondsSum { get; set; }
    public Nullable<double> DurationActiveToInactiveSecondsSum { get; set; }
    public Nullable<decimal> DurationActiveToAcknowledgeSecondsAverage { get; set; }
    public Nullable<decimal> DurationActiveToInactiveSecondsAverage { get; set; }
}

public partial class BHSActiveAlarmSummaryByDayWithAverageDurationInSeconds_Result
{
    public Nullable<System.DateTime> AlarmDay { get; set; }
    public Nullable<double> DurationActiveToAcknowledgeSecondsSum { get; set; }
    public Nullable<double> DurationActiveToInactiveSecondsSum { get; set; }
    public Nullable<decimal> DurationActiveToAcknowledgeSecondsAverage { get; set; }
    public Nullable<decimal> DurationActiveToInactiveSecondsAverage { get; set; }
}

public partial class BHSActiveAlarmSummaryByDayWithAverageDurationInSeconds_Result1
{
    public Nullable<System.DateTime> AlarmDay { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<double> DurationActiveToAcknowledgeSecondsSum { get; set; }
    public Nullable<double> DurationActiveToInactiveSecondsSum { get; set; }
    public Nullable<decimal> DurationActiveToAcknowledgeSecondsAverage { get; set; }
    public Nullable<decimal> DurationActiveToInactiveSecondsAverage { get; set; }
}

public partial class BHSActiveAlarmSummaryByHourWithAverageDurationInSeconds_Result
{
    public Nullable<System.DateTime> AlarmHour { get; set; }
    public Nullable<double> DurationActiveToAcknowledgeSecondsSum { get; set; }
    public Nullable<double> DurationActiveToInactiveSecondsSum { get; set; }
    public Nullable<decimal> DurationActiveToAcknowledgeSecondsAverage { get; set; }
    public Nullable<decimal> DurationActiveToInactiveSecondsAverage { get; set; }
}

public partial class BHSActiveAlarmSummaryByHourWithAverageDurationInSeconds_Result1
{
    public Nullable<System.DateTime> AlarmHour { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<double> DurationActiveToAcknowledgeSecondsSum { get; set; }
    public Nullable<double> DurationActiveToInactiveSecondsSum { get; set; }
    public Nullable<decimal> DurationActiveToAcknowledgeSecondsAverage { get; set; }
    public Nullable<decimal> DurationActiveToInactiveSecondsAverage { get; set; }
}

public partial class BHSAlarmAreaCount_Result
{
    public string BHSName { get; set; }
    public string Area { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<System.DateTime> MinActiveDateTime { get; set; }
    public Nullable<System.DateTime> MaxActiveDateTime { get; set; }
    public Nullable<int> MaxDurationSec { get; set; }
    public Nullable<int> MinDurationSec { get; set; }
    public Nullable<int> AverageDuration { get; set; }
    public string AlarmList { get; set; }
}

public partial class BHSAlarmAreaCountDetails_Result
{
    public string DeviceNameList { get; set; }
    public string Description { get; set; }
    public string BHSName { get; set; }
    public string Location { get; set; }
    public string Alarm { get; set; }
    public string DeviceTypeNameList { get; set; }
    public Nullable<decimal> iOPSAlarmUniqueId { get; set; }
    public Nullable<System.DateTime> ActiveDateTime { get; set; }
    public Nullable<int> duration { get; set; }
}

public partial class BHSAlarmsHistoryByAlarmTypeAndDateRangeWithDurationInSeconds_Result
{
    public Nullable<decimal> iOPSAlarmUniqueId { get; set; }
    public string BHSName { get; set; }
    public string Alarm { get; set; }
    public string Location { get; set; }
    public string DeviceNameList { get; set; }
    public Nullable<System.DateTime> ActiveDateTime { get; set; }
    public Nullable<System.DateTime> AcknowledgeDateTime { get; set; }
    public Nullable<System.DateTime> InactiveDateTime { get; set; }
    public Nullable<double> DurationActiveToAcknowledgeSeconds { get; set; }
    public Nullable<double> DurationActiveToInactiveSeconds { get; set; }
}

public partial class BHSAutomaticTokenReaderPercentReadRateReportGroupedByDateRange_Result
{
    public string Area { get; set; }
    public string Location { get; set; }
    public Nullable<decimal> PercentReads { get; set; }
    public Nullable<decimal> PercentFailedReads { get; set; }
}

public partial class BHSAutomaticTokenReaderPercentReadRateReportGroupedByDateRange_Result1
{
    public string Area { get; set; }
    public string Location { get; set; }
    public Nullable<int> TotalReads { get; set; }
    public Nullable<int> GoodReads { get; set; }
    public Nullable<int> BadReads { get; set; }
    public Nullable<decimal> PercentGoodReads { get; set; }
    public Nullable<decimal> PercentFailedReads { get; set; }
}

public partial class BHSAutomaticTokenReaderPercentReadRateReportGroupedByDay_Result
{
    public string Area { get; set; }
    public string Location { get; set; }
    public Nullable<decimal> PercentReads { get; set; }
    public Nullable<decimal> PercentFailedReads { get; set; }
}

public partial class BHSAutomaticTokenReaderPercentReadRateReportGroupedByDay_Result1
{
    public string Area { get; set; }
    public string Location { get; set; }
    public Nullable<int> TotalReads { get; set; }
    public Nullable<int> GoodReads { get; set; }
    public Nullable<int> BadReads { get; set; }
    public Nullable<decimal> PercentReads { get; set; }
    public Nullable<decimal> PercentFailedReads { get; set; }
    public Nullable<System.DateTime> ScanDay { get; set; }
}

public partial class BHSAutomaticTokenReaderPercentReadRateReportGroupedByHour_Result
{
    public string Area { get; set; }
    public string Location { get; set; }
    public Nullable<int> TotalReads { get; set; }
    public Nullable<int> GoodReads { get; set; }
    public Nullable<int> BadReads { get; set; }
    public Nullable<decimal> PercentReads { get; set; }
    public Nullable<decimal> PercentFailedReads { get; set; }
    public Nullable<System.DateTime> ScanHour { get; set; }
}

public partial class BHSBagDimensionerPercentReadRateReportGroupedByDateRange_Result
{
    public string Area { get; set; }
    public string Location { get; set; }
    public Nullable<int> TotalReads { get; set; }
    public Nullable<int> InGaugeReads { get; set; }
    public Nullable<int> OutOfGaugeReads { get; set; }
    public Nullable<decimal> PercentInGaugeReads { get; set; }
    public Nullable<decimal> PercentOutOfGaugeReads { get; set; }
}

public partial class BHSBagPathDurationCumlativeHourlyAggregatePlusEmptyHours_Result
{
    public Nullable<long> Id { get; set; }
    public Nullable<long> SiteId { get; set; }
    public string BHSName { get; set; }
    public string BagPathType { get; set; }
    public int MinimumDurationSeconds { get; set; }
    public int MaximumDurationSeconds { get; set; }
    public int AverageDurationSeconds { get; set; }
    public decimal StandardDeviationSeconds { get; set; }
    public string BagPath { get; set; }
    public int TokenCount { get; set; }
    public Nullable<System.DateTime> MinimumTimestamp { get; set; }
    public Nullable<System.DateTime> MaximumTimeStamp { get; set; }
    public Nullable<System.DateTime> Hour { get; set; }
    public Nullable<System.DateTime> Day { get; set; }
}

public partial class BHSFilterByAlarmTypesbyArea_Result
{
    public string BHSName { get; set; }
    public string Area { get; set; }
    public string Alarm { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<System.DateTime> MinActiveDateTime { get; set; }
    public Nullable<System.DateTime> MaxActiveDateTime { get; set; }
    public Nullable<int> MaxDurationSec { get; set; }
    public Nullable<int> MinDurationSec { get; set; }
    public Nullable<int> AverageDuration { get; set; }
}

public partial class BHSLocationThroughput_Result
{
    public Nullable<long> SiteId { get; set; }
    public string TicketCounter { get; set; }
    public Nullable<long> BagCount { get; set; }
}

public partial class BHSLocationThroughput_Result1
{
    public Nullable<long> SiteId { get; set; }
    public string Section { get; set; }
    public Nullable<long> BagCount { get; set; }
}

public partial class BHSLocationThroughputHistoryByDay_Result
{
    public Nullable<long> SiteId { get; set; }
    public string Section { get; set; }
    public Nullable<System.DateTime> ThroughputDay { get; set; }
    public Nullable<long> BagCount { get; set; }
}

public partial class BHSLocationThroughputHistoryByHour_Result
{
    public Nullable<long> SiteId { get; set; }
    public string Section { get; set; }
    public Nullable<System.DateTime> ThroughputHour { get; set; }
    public Nullable<long> BagCount { get; set; }
}

public partial class BHSLocationThroughputHistoryByHour_Result1
{
    public Nullable<long> SiteId { get; set; }
    public string Section { get; set; }
    public Nullable<System.DateTime> ThroughputHour { get; set; }
    public Nullable<long> BagCount { get; set; }
}

public partial class BHSPercentCBRAPerDay_Result
{
    public Nullable<long> SiteId { get; set; }
    public string BHSName { get; set; }
    public Nullable<int> TokenCount { get; set; }
    public Nullable<int> TotalCBRABags { get; set; }
    public Nullable<decimal> CBRAPercentOfTotal { get; set; }
    public Nullable<System.DateTime> MinTimeStamp { get; set; }
    public Nullable<System.DateTime> MaxTimeStamp { get; set; }
    public Nullable<System.DateTime> Day { get; set; }
}

public partial class BHSPercentOfFailSafePerDay_Result
{
    public Nullable<System.DateTime> Day { get; set; }
    public string BHSName { get; set; }
    public Nullable<int> PE_Bag_Count { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<decimal> Percent { get; set; }
    public string Description { get; set; }
    public Nullable<System.DateTime> MinActiveDateTime { get; set; }
    public Nullable<System.DateTime> MaxActiveDateTime { get; set; }
    public Nullable<int> MaxDurationSec { get; set; }
    public Nullable<int> MinDurationSec { get; set; }
    public Nullable<int> AverageDuration { get; set; }
}

public partial class BHSPercentOfFailSafePerDay_Result1
{
    public Nullable<System.DateTime> Day { get; set; }
    public string BHSName { get; set; }
    public Nullable<int> PEBagCount { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<decimal> Percent { get; set; }
    public string Description { get; set; }
    public Nullable<System.DateTime> MinActiveDateTime { get; set; }
    public Nullable<System.DateTime> MaxActiveDateTime { get; set; }
    public Nullable<int> MaxDurationSec { get; set; }
    public Nullable<int> MinDurationSec { get; set; }
    public Nullable<int> AverageDuration { get; set; }
}

public partial class BHSPercentOfFailSafePerHour_Result
{
    public Nullable<System.DateTime> Hour { get; set; }
    public string BHSName { get; set; }
    public Nullable<int> PE_Bag_Count { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<decimal> Percent { get; set; }
    public string Description { get; set; }
    public Nullable<System.DateTime> MinActiveDateTime { get; set; }
    public Nullable<System.DateTime> MaxActiveDateTime { get; set; }
    public Nullable<int> MaxDurationSec { get; set; }
    public Nullable<int> MinDurationSec { get; set; }
    public Nullable<int> AverageDuration { get; set; }
}

public partial class BHSPercentOfFailSafePerHour_Result1
{
    public Nullable<System.DateTime> Hour { get; set; }
    public string BHSName { get; set; }
    public Nullable<int> PEBagCount { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<decimal> Percent { get; set; }
    public string Description { get; set; }
    public Nullable<System.DateTime> MinActiveDateTime { get; set; }
    public Nullable<System.DateTime> MaxActiveDateTime { get; set; }
    public Nullable<int> MaxDurationSec { get; set; }
    public Nullable<int> MinDurationSec { get; set; }
    public Nullable<int> AverageDuration { get; set; }
}

public partial class BHSSectionThroughput_Result
{
    public Nullable<long> SiteId { get; set; }
    public string TicketCounter { get; set; }
    public Nullable<long> BagCount { get; set; }
}

public partial class BHSTicketCounterThroughput_Result
{
    public Nullable<long> SiteId { get; set; }
    public string TicketCounter { get; set; }
    public Nullable<long> BagCount { get; set; }
}

public partial class BHSTop5AlarmTypeLongestDuration_Result
{
    public string AlarmType { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<System.DateTime> MinActiveDateTime { get; set; }
    public Nullable<System.DateTime> MaxActiveDateTime { get; set; }
    public Nullable<int> MaxDurationSec { get; set; }
    public Nullable<int> MinDurationSec { get; set; }
    public Nullable<int> AverageDuration { get; set; }
}

public partial class BHSTop5AlarmTypeLongestDuration_Result1
{
    public string AlarmType { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<System.DateTime> MinActiveDateTime { get; set; }
    public Nullable<System.DateTime> MaxActiveDateTime { get; set; }
    public Nullable<int> MaxDurationSec { get; set; }
    public Nullable<int> MinDurationSec { get; set; }
    public Nullable<int> AverageDuration { get; set; }
    public string DeviceNameList { get; set; }
    public string DeviceTypeNameList { get; set; }
}

public partial class BHSTop5AlarmTypes_Result
{
    public string AlarmType { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<System.DateTime> MinActiveDateTime { get; set; }
    public Nullable<System.DateTime> MaxActiveDateTime { get; set; }
    public Nullable<int> MaxDurationSec { get; set; }
    public Nullable<int> MinDurationSec { get; set; }
}

public partial class BHSTop5JamDeviceswithCount_Result
{
    public string DeviceName { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<System.DateTime> MinActiveDateTime { get; set; }
    public Nullable<System.DateTime> MaxActiveDateTime { get; set; }
    public Nullable<int> MaxDurationSec { get; set; }
    public Nullable<int> MinDurationSec { get; set; }
    public Nullable<int> AverageDuration { get; set; }
    public string DeviceTypeNameList { get; set; }
}

public partial class BHSTop5JamDeviceswithLongestDuration_Result
{
    public string DeviceName { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<System.DateTime> MinActiveDateTime { get; set; }
    public Nullable<System.DateTime> MaxActiveDateTime { get; set; }
    public Nullable<int> MaxDurationSec { get; set; }
    public Nullable<int> MinDurationSec { get; set; }
    public Nullable<int> AverageDuration { get; set; }
}

public partial class BHSTotalSystemThroughput_Result
{
    public Nullable<int> Bag_Count { get; set; }
    public string location { get; set; }
    public string BHSName { get; set; }
    public Nullable<System.DateTime> MinTimeStamp { get; set; }
    public Nullable<System.DateTime> MaxTimeStamp { get; set; }
}

public partial class BHSTotalSystemThroughput_Result1
{
    public Nullable<int> BagCount { get; set; }
    public string Location { get; set; }
    public string BHSName { get; set; }
    public Nullable<System.DateTime> MinTimeStamp { get; set; }
    public Nullable<System.DateTime> MaxTimeStamp { get; set; }
}

public partial class GSAlertCountByDay_Result
{
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<int> CriticalCount { get; set; }
    public Nullable<int> WarningCount { get; set; }
    public Nullable<int> AlertCount { get; set; }
    public Nullable<System.DateTime> TimeStamp { get; set; }
}

public partial class GSAlertCountByhour_Result
{
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<int> CriticalCount { get; set; }
    public Nullable<int> WarningCount { get; set; }
    public Nullable<int> AlertCount { get; set; }
    public Nullable<System.DateTime> TimeStamp { get; set; }
}

public partial class GSEquipmentUsage_TVF_Query_Result
{
    public string Gate { get; set; }
    public double PBB_Hours { get; set; }
    public double PCA_Hours { get; set; }
    public double GPU_Hours { get; set; }
    public int PBB_Times_Used { get; set; }
    public int PCA_Times_Used { get; set; }
    public int GPU_Times_Used { get; set; }
}

public partial class GSTop5AlarmTypes_Result
{
    public string AlarmType { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<System.DateTime> MinActiveDateTime { get; set; }
    public Nullable<System.DateTime> MaxActiveDateTime { get; set; }
    public Nullable<int> MaxDurationSec { get; set; }
    public Nullable<int> MinDurationSec { get; set; }
    public Nullable<int> AverageDuration { get; set; }
    public string Zone { get; set; }
    public string Gate { get; set; }
    public string Asset { get; set; }
}

public partial class GSTop5AlarmTypes3_Result
{
    public string AlarmType { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<int> ActiveCount { get; set; }
    public Nullable<System.DateTime> MinActiveDateTime { get; set; }
    public Nullable<System.DateTime> MaxActiveDateTime { get; set; }
    public Nullable<int> MaxDurationSec { get; set; }
    public Nullable<int> MinDurationSec { get; set; }
    public Nullable<int> AverageDuration { get; set; }
    public Nullable<long> JBTStandardObservationIdList { get; set; }
}

public partial class GSTop5AlarmTypesByEquipment_Result
{
    public string AlarmType { get; set; }
    public string Gate { get; set; }
    public Nullable<int> AlarmCount { get; set; }
    public Nullable<int> ActiveCount { get; set; }
    public Nullable<System.DateTime> MinActiveDateTime { get; set; }
    public Nullable<System.DateTime> MaxActiveDateTime { get; set; }
    public Nullable<int> MaxDurationSec { get; set; }
    public Nullable<int> MinDurationSec { get; set; }
    public Nullable<int> AverageDuration { get; set; }
}

public partial class spTerminalOverviewGraphicsAndTags_Result
{
    public string BaseUnitImageURL { get; set; }
    public string ImageURL { get; set; }
    public Nullable<long> JBTStandardObservationId { get; set; }
    public long TagId { get; set; }
    public long AssetId { get; set; }
    public Nullable<long> SiteId { get; set; }
    public Nullable<long> LastObservationId { get; set; }
    public string TagName { get; set; }
    public Nullable<System.DateTime> LastObservationDate { get; set; }
    public string LastObservationTextValue { get; set; }
    public string ValueWhenVisible { get; set; }
}
