//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Library.Models.LDAP_Cache
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base(Entities.Get_EntityConnection(),true)
        {
        }
    
    		static System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace _entityWorkspace = null;
        		static System.Reflection.Assembly _currentAssembly = null;
    
    			static System.Data.Entity.Core.EntityClient.EntityConnection Get_EntityConnection()
        		{
        			if (_currentAssembly == null)
        			{
        				_currentAssembly = System.Reflection.Assembly.GetExecutingAssembly();
        			}
        
        			if (_entityWorkspace == null)
        			{
        				_entityWorkspace = new System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace(new string[] { "res://*/" }, new System.Reflection.Assembly[] { _currentAssembly });
        			}
        
        
        			return new System.Data.Entity.Core.EntityClient.EntityConnection(_entityWorkspace, Library.Database_Connectivity.SQL_Server_LDAP_Cache_Connection.Get_Connection());
        		}
        
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Cache_Statistic> Cache_Statistics { get; set; }
        public DbSet<HPRDData> HPRDDatas { get; set; }
        public DbSet<Status> Statuses { get; set; }
        public DbSet<History> Histories { get; set; }
        public DbSet<LocalSetCache> LocalSetCaches { get; set; }
        public DbSet<Person_Cache> Person_Caches { get; set; }
    
        public virtual ObjectResult<Update_HPRDData_Result> Update_HPRDData(Nullable<int> intMinutes_Back)
        {
            var intMinutes_BackParameter = intMinutes_Back.HasValue ?
                new ObjectParameter("intMinutes_Back", intMinutes_Back) :
                new ObjectParameter("intMinutes_Back", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Update_HPRDData_Result>("Update_HPRDData", intMinutes_BackParameter);
        }
    
        public virtual ObjectResult<update_LocalSetCache_From_Latest_LocalSetCache_Result> update_LocalSetCache_From_Latest_LocalSetCache(string myMachineName)
        {
            var myMachineNameParameter = myMachineName != null ?
                new ObjectParameter("myMachineName", myMachineName) :
                new ObjectParameter("myMachineName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<update_LocalSetCache_From_Latest_LocalSetCache_Result>("update_LocalSetCache_From_Latest_LocalSetCache", myMachineNameParameter);
        }
    }
}
